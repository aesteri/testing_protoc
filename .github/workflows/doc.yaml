# name: Document

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build-changelog:
#     runs-on: ubuntu-latest
#     needs: [build-doc]
#     steps:
#       - uses: actions/checkout@v4
#         with:
#           repository: aesteri/testing_protoc
#           ref: refs/heads/main

#       - name: Save Commit Message
#         id: save_commit
#         run: |
#           COMMIT_MESSAGES=$(git log -1 --pretty=format:"%s")
#           LATEST_COMMIT_HASH=$(git log -1 --pretty=format:"%H")
#           PARENT_COMMITS=$(git rev-list --parents -n 1 $LATEST_COMMIT_HASH)
#           ACTUAL_COMMIT_HASH=$(echo $PARENT_COMMITS | cut -d' ' -f2)
#           ACTUAL_COMMIT_MSG=$(git log --format=%B -n 1 $ACTUAL_COMMIT_HASH)
#           ACTUAL_COMMIT_MSG=$(echo "$ACTUAL_COMMIT_MSG" | sed 's/^Merge pull request.*//' | tr -d '\n')
#           echo "ACTUAL_COMMIT_MSG=${ACTUAL_COMMIT_MSG}" >> $GITHUB_ENV  

#       - name: Generate changelog entry
#         id: changelog
#         run: |
#           RELEASE_VERSION="${{ env.date }}"
#           CHANGELOG_FILE="CHANGELOG.md"
#           NEW_ENTRY="## [${RELEASE_VERSION}](https://github.com/${{ github.repository }}/releases/tag/${RELEASE_VERSION})\n\n"
#           NEW_ENTRY+="* ${ACTUAL_COMMIT_MSG}\n\n"
#           echo -e "${NEW_ENTRY}$(cat $CHANGELOG_FILE)" > $CHANGELOG_FILE

#   build-doc:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         version: [23.11]
#     steps:
#       - uses: actions/checkout@v4
#         with:
#           repository: aesteri/testing_protoc
#           ref: refs/heads/main

#       - name: Set up Protobuf tools and generate HTML file
#         run: |
#           sudo apt-get install -y --no-install-recommends protobuf-compiler
#           go install github.com/pseudomuto/protoc-gen-doc/cmd/protoc-gen-doc@latest
#           export PATH=$PATH:$HOME/go/bin
#           mkdir -p docs
#           protoc -I=proto --doc_out=./docs --doc_opt=html,index.html proto/*.proto
      