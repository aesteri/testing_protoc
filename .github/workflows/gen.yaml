name: Generate, Release, and Maintain

on:
  push:
    branches:
      - main

jobs:

  build-lib:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [23.11]
    steps:
      - uses: actions/checkout@v4
        with:
          repository: aesteri/testing_protoc
          ref: refs/heads/main

      - name: Set up Protobuf tools
        run: |
          sudo apt-get install -y --no-install-recommends protobuf-compiler
          go install github.com/pseudomuto/protoc-gen-doc/cmd/protoc-gen-doc@latest
          export PATH=$PATH:$HOME/go/bin
          mkdir -p docs
          protoc -I=proto --doc_out=./docs --doc_opt=html,index.html proto/*.proto
          
      - name: Commit and push updated documentation
        env:
          GH_TOKEN: ${{ secrets.MY_CUSTOM_GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add docs/index.html
          git diff --quiet --cached || git commit -m "Update HTML documentation"
          git push

      - uses: cachix/install-nix-action@v23

      - name: Get branch names
        id: branch-name
        uses: tj-actions/branch-names@v7
      
      - name: Get current date and time
        id: date
        run: echo "date=$(date +'%Y-%m-%dT%H_%M_%S')" >> $GITHUB_ENV

      - uses: actions/checkout@v4
        with:
          repository: aesteri/testing_protoc
          ref: refs/heads/main

      - run: nix run .#nanopb-runner -- ${{ env.date }}

      - name: Create release artifact
        run: |
          mkdir -p hytech_msgs_pb_lib
          mv *.pb.* hytech_msgs_pb_lib
          mv hytech_msgs_version.h hytech_msgs_pb_lib
          echo -e "{\n\"name\": \"hytech_msgs_pb_lib\",\n\"version\": \"1.${{ github.run_number }}.0\"\n}" >> hytech_msgs_pb_lib/library.json
          tar -czvf hytech_msgs_pb_lib.tar.gz hytech_msgs_pb_lib
      
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.date }}
          files: |
            hytech_msgs_pb_lib.tar.gz
            ./proto/base_msgs.proto
            ./proto/hytech_msgs.proto
            ./docs/index.html

      - uses: actions/checkout@v4
        with:
          repository: aesteri/testing_protoc
          ref: refs/heads/main

      - name: Generate changelog entry
        id: changelog
        run: |
          RELEASE_VERSION="${{ env.date }}"
          COMMIT_MESSAGES=$(git log -1 --pretty=format:"%s")
          
          # Get the most recent commit hash
          LATEST_COMMIT_HASH=$(git log -1 --pretty=format:"%H")

          # Check if it's a merge commit
          PARENT_COMMITS=$(git rev-list --parents -n 1 $LATEST_COMMIT_HASH)

          # Extract the actual commit message from the parent commit (the second commit)
          ACTUAL_COMMIT_HASH=$(echo $PARENT_COMMITS | cut -d' ' -f2)

          # Get the commit message of the actual commit
          ACTUAL_COMMIT_MSG=$(git log --format=%B -n 1 $ACTUAL_COMMIT_HASH)

          # Remove the "Merge pull request" line and clean up the message
          ACTUAL_COMMIT_MSG=$(echo "$ACTUAL_COMMIT_MSG" | sed 's/^Merge pull request.*//' | tr -d '\n')

          # Define changelog file path
          CHANGELOG_FILE="CHANGELOG.md"
          
          # Start the new changelog entry
          NEW_ENTRY="## [${RELEASE_VERSION}](https://github.com/${{ github.repository }}/releases/tag/${RELEASE_VERSION})\n\n"
          
          # Append the commit messages to the changelog entry
          NEW_ENTRY+="* ${ACTUAL_COMMIT_MSG}\n\n"
          
          # Add the new entry to the top of the changelog file
          echo -e "${NEW_ENTRY}$(cat $CHANGELOG_FILE)" > $CHANGELOG_FILE

      - name: Commit and push updated changelog
        run: |
          # # Set up git user
          # git config --global user.name "github-actions[bot]"
          # git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          # Add and commit the changelog update
          git add CHANGELOG.md
          git commit -m "Update changelog for release ${{ github.event.release.tag_name }}"

          # Push the changes
          git push

